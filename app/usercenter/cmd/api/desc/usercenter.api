syntax = "v1"

info(
	title: "用户中心服务"
	desc: "用户中心服务"
	author: "GoGeekBaird"
	email: "gogeek2022@163.com"
	version: "v1"
)

import (
	"user/user.api"
)

//============================> usercenter v1 <============================
//no need login
@server(
	prefix: usercenter/v1
	group: usercenter
)
service usercenter {
	
	@doc(
		summary: "register"
	)
	@handler register
	post /user/register (RegisterReq) returns (RegisterResp)
	
	@doc(
		summary: "login"
	)
	@handler login
	post /user/login (LoginReq) returns (LoginResp)
	
	@doc(
		summary: "wechat mini auth"
	)
	@handler wxMiniAuth
	post /user/wxmini-auth (WXMiniAuthReq) returns (WXMiniAuthResp)
	
	@doc(
		summary: "get message code"
	)
	@handler messagecode
	post /user/messagecode (MsgCodeReq)
	
	@doc(
		summary: "get captcha code"
	)
	@handler getCaptcha
	get /user/get-captcha returns(GetCaptchaResp)
	
	@doc(
		summary: "verfy captcha code"
	)
	@handler verfyCaptcha
	post /user/verfy-captcha(VerfyCaptchaReq) returns(VerfyCaptchaResp)
	
	@doc(
		summary: "change password"
	)
	@handler changePwd
	post /user/change-pwd(ChangePwdReq)
	
}

//need login
@server(
	prefix: usercenter/v1
	group: usercenter
	jwt: JwtAuth
	middleware: OnlineStatus // 路由中间件声明
)
service usercenter {
	
	@doc(
		summary: "get user info"
	)
	@handler detail
	get /user/detail returns (UserInfoResp)
	
	@doc(
		summary: "update user"
	)
	@handler updateUser
	post /user/update-user(UpdateUserReq)
	
	@doc(
		summary: "update user"
	)
	@handler deleteUser
	post /user/delete-user(DeleteUserReq)
	
	@doc(
		summary: "get online user list"
	)
	@handler getOnlineUser
	get /user/online-user returns(GetOnlineUserResp)
}